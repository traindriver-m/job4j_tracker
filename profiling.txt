
Провел анализ работы job4j_tracker с помощью утилиты jconsole.
Заметил, что при разных запусках программа ведет себя немного по разному в плане потребления памяти.
При одном запуске тот же Eden на протяжении всего времени работы программы остаётся незаполненным,
в другой раз постоянно сохраняется заполненность на уровне 1мб.
До создания первой заявки по заполнению общей памяти хипа и Old ge сохраняется некоторая стабильность пусть и с разными значениями при разных запусках.
После создания первой завяки происходит небольшой скачок потребления и начинается медленный рост количества потребляемой памяти, увеличивается количество классов.
Получение и удаление заявок, даже до полностью пустого хранилища не меняет ситуацию - происходит рост количества используемой памяти хипа Old gen области.
При этом GC работает - это видно по очистившейся области Survivor.Последующие добавления объектов в хранилище заявок лишь приводят опять к некоторому всплеску потребления,
а далее рост потребления памяти опять делается относительно плавным но неуклонным.В итоге, если в настройках выставлен максимальный объём памяти хипа для использования приложением,
потребление рано или поздно подходит к близким значениям и приложение падает с "OutOfMemoryError". Пробовал с разными настройками -Xmx - рано или поздно приложение падает.
Очень большие значения не задавал, а то пришлось бы сидеть мониторить весь день или ставить на ночь. Возможно, что на каком-то значении рост прекратится, но 
я не дождался этого момента.В момент OutOfMemoryError, области Eden и Survivor блыи пустыми, а в Old Gen произошло резкое падение потребления памяти.
В связи с проведенным анализом появилось подозрение, что при работе приложения с сохранением заявок во внутреннюю память, рано или поздно произойдет
переполнение памяти и остановка программы, в связи с чем наверное использование его в данном виде будет нецелесообразным.

 






 